name: Java Spring Boot CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Top-level env: tüm job'larca görülsün
env:
  NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    # Aynı ref için eşzamanlı DC çalışmasın (rate-limit koruması)
    concurrency: dc-${{ github.ref }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # NVD yerel verisini sakla (build'ler arası yeniden kullan)
      - name: Restore Dependency-Check data cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: dc-data-${{ runner.os }}

      # Purge adımı artık gerekli değil; cache kullanıyoruz
      # - name: Purge OWASP DC cached data (prevent stale local data)
      #   run: rm -rf ~/.m2/repository/org/owasp/dependency-check-data || true

      - name: OWASP Dependency-Check (with NVD API key)
        run: |
          echo "NVD_API_KEY length: ${#NVD_API_KEY}"
          # Plugin config pom.xml'de; burada -DnvdApiKey geçmiyoruz.
          # Debug görmek istersen mvn -X kullanabilirsin.
          mvn -Pprod -DskipTests \
              clean verify org.owasp:dependency-check-maven:check
        # Geçici: DC stabil olana kadar pipeline'ı kırmasın
        continue-on-error: true

      - name: Upload OWASP Dependency Check Reports
        if: ${{ hashFiles('**/target/dependency-check-report.json') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: |
            **/target/dependency-check-report.json

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -Pprod -DskipTests verify sonar:sonar
          -Dsonar.projectKey=simayaydin_etiya-project
          -Dsonar.organization=simayaydin
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Upload build artifact (.jar)
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

      # Build sonunda NVD verisini cache'e geri yaz
      - name: Save Dependency-Check data cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: dc-data-${{ runner.os }}
